{"version":3,"sources":["components/DataTable.js","utils/getCookie.js","utils/confirmAction.js","components/DateInput.js","libs/dataTables.cellEdit.js","components/Tabledit/index.js","components/Tabledit/jquery.tabledit.js"],"names":["DataTable","props","tableEl","React","createRef","state","table","draw","highlightRow","row","data","jRow","$","tooltip","title","__meta_pending","className","__meta_error","message","error","errors","Object","keys","errorSub","classList","add","softDeleteField","remove","toggle","placement","self","defaultConfig","dom","buttons","extend","text","titleAttr","exportOptions","columns","responsive","language","search","searchPlaceholder","rowCallback","this","initTable","current","find","config","configRowCallback","prevProp","prevState","lodash","isEqual","destroy","toolbar","ref","cellSpacing","width","style","children","Component","getCookie","cname","name","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","action","Swal","fire","consequence","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","yes","then","result","value","loadingModal","loading","loading_text","showConfirmButton","onBeforeOpen","showLoading","res","closeModal","success","succes_text","footer","dismiss","DismissReason","cancel","canceled","DateInput","date","dateInput","hiddenInput","jquery","datepicker","format","zIndexOffset","on","e","handleChange","reverse","join","val","Date","getDate","target","getOwnPropertyDescriptor","window","HTMLInputElement","prototype","set","call","ev2","Event","bubbles","dispatchEvent","onChange","bind","type","display","jQuery","fn","dataTable","Api","register","settings","updateEditableCell","callingElement","closest","parents","cell","columnIndex","index","column","inputField","prop","toLowerCase","siblings","getInputField","newValue","_addValidationCss","allowNulls","errorClass","addClass","css","_update","oldValue","onUpdate","onValidate","page","info","cancelEditableCell","body","off","currentColumnIndex","editableCellsRow","node","cellValue","isNaN","replace","sanitizeCellValue","input","inputSetting","inputType","inputCss","confirmCss","cancelCss","startWrapperHtml","endWrapperHtml","listenToKeys","inputTypes","each","setting","wrapperHtml","elements","confirmationButton","html","options","option","focus","ui","alert","setTimeout","showOn","buttonImage","buttonImageOnly","buttonText","getInputHtml","Tabledit","initTableEdit","prevProps","editButton","deleteButton","onAjax","serialize","parseInt","item","setValue","identifier","editable","update","Error","is","$table","defaults","url","location","href","inputClass","toolbarClass","groupClass","dangerClass","warningClass","mutedClass","eventType","rowIdentifier","hideIdentifier","autoFocus","saveButton","restoreButton","edit","class","delete","save","restore","confirm","onDraw","onSuccess","onFail","onAlways","$lastEditedRow","$lastDeletedRow","Draw","hide","span","parent","attr","parseJSON","confirmButton","append","Mode","td","$tr","blur","show","removeClass","Delete","reset","$input","Edit","filter","trim","ajax","submit","ajaxResult","a","getElementById","deleteRow","serializeArray","jqXHR","post","textStatus","fail","errorThrown","always","event","handled","preventDefault","activated","hasClass","$td","$button","get","$editMode","has","keyCode","next"],"mappings":"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","file":"static/js/3.0e53f71b.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nimport lodash from 'lodash';\n\nimport 'datatables.net-bs4';\nimport 'datatables.net-buttons-bs4';\nimport 'datatables.net-buttons/js/buttons.html5.js';\nimport 'datatables.net-colreorder-bs4';\nimport 'datatables.net-fixedcolumns-bs4';\nimport 'datatables.net-fixedheader-bs4';\nimport 'datatables.net-responsive-bs4';\nimport 'datatables.net-rowgroup-bs4';\nimport 'datatables.net-rowreorder-bs4';\nimport 'datatables.net-scroller-bs4';\nimport 'datatables.net-select-bs4';\nimport '../libs/dataTables.cellEdit';\n\n//datatables dependencies\n// import jsZip from  'jszip';\n// import 'pdfmake';\n// import pdfFonts from 'pdfmake/build/vfs_fonts.js';\n\n// pdfMake.vfs = pdfFonts.pdfMake.vfs;\n// window.JSZip = jsZip;\n\nexport default class DataTable extends Component {\n  tableEl = React.createRef();\n  state = {}\n  table = null;\n  constructor(props) {\n    super(props);\n    const self = this;\n    this.defaultConfig = {\n      \"pagingType\": \"full_numbers\",\n      \"lengthMenu\": [\n        [10, 25, 50, 100, -1],\n        [10, 25, 50, 100, \"All\"]\n      ],\n      dom: 'rt<\"bottom\"lpi><\"clear\">',\n      buttons: [\n        {\n          extend:    'excelHtml5',\n          text:      '<i class=\"fa fa-file-excel-o text-info\"></i>',\n          titleAttr: 'Excel',\n          exportOptions: {\n            columns: \"thead th:not(.noExport)\"\n          }\n        }\n      ],\n      responsive: true,\n      language: {\n        search: \"_INPUT_\",\n        searchPlaceholder: \"Search records\",\n      },\n      rowCallback: function( row, data ) {\n        let jRow = $(row);\n        jRow.tooltip('dispose');\n        let title = '';\n        if(data.__meta_pending) {\n            title = 'Pending - ';\n            let className = 'table-dark';\n            if(data.__meta_error && data.__meta_error.message) {\n                className = (data.__meta_error.message !== \"Network Error\") ? 'table-warning' : className;\n                let error = data.__meta_error;\n                title += error.message;\n                if(error.errors) {\n                    for(let errorSub of Object.keys(error.errors) ){\n                      title += '\\n' + error.errors[errorSub];\n                    }\n                }\n            }\n            row.classList.add(className);\n        } else if(data[self.props.softDeleteField]) {\n            title = 'Discontinued';\n            row.classList.add('table-danger');\n        } else {\n          row.classList.remove('table-warning');\n          row.classList.remove('table-dark');\n          row.classList.remove('table-danger');\n        }\n\n        if(title)\n            jRow.tooltip({toggle: \"tooltip\", placement: \"bottom\", title });\n      }\n    };\n  }\n  \n  componentDidMount() {\n    this.initTable();\n  }\n\n  componentWillUnmount() {\n      $(this.tableEl.current).find('tr[title]').tooltip('dispose');\n  }\n\n  initTable() {\n    const self = this;\n    let config = this.props.config || {};\n    let configRowCallback = this.props.config.rowCallback;\n    config.rowCallback = (row, data) => {\n      self.highlightRow(row, data);\n      configRowCallback && configRowCallback(row, data);\n    };\n    this.table = $(this.tableEl.current).DataTable({...this.defaultConfig, ...config});\n  }\n\n  componentDidUpdate(prevProp,prevState) {\n    if(!lodash.isEqual(prevProp.config, this.props.config)) {\n      this.table.destroy();\n      this.initTable();\n    }\n  }\n\n  draw = () => {\n    this.table.draw();\n  }\n\n  highlightRow = (row, data) => {\n    let jRow = $(row);\n      jRow.tooltip('dispose');\n      let title = '';\n      if(data.__meta_pending) {\n          title = 'Pending - ';\n          let className = 'table-dark';\n          if(data.__meta_error && data.__meta_error.message) {\n              className = (data.__meta_error.message !== \"Network Error\") ? 'table-warning' : className;\n              let error = data.__meta_error;\n              title += error.message;\n              if(error.errors) {\n                  for(let errorSub of Object.keys(error.errors) ){\n                    title += '\\n' + error.errors[errorSub];\n                  }\n              }\n          }\n          row.classList.add(className);\n      } else if(data[this.props.softDeleteField]) {\n          title = 'Discontinued';\n          row.classList.add('table-danger');\n      } else {\n        row.classList.remove('table-warning');\n        row.classList.remove('table-dark');\n        row.classList.remove('table-danger');\n      }\n\n      if(title)\n          jRow.tooltip({toggle: \"tooltip\", placement: \"bottom\", title });\n  }\n\n  render() {\n    return <div className=\"row\">\n      <div className=\"col-md-12\">\n        <div className=\"card data-tables\">\n        <div className=\"card-header text-center\">\n          <h3>{this.props.title}</h3>\n        </div>\n        <div className=\"card-body table-striped table-no-bordered table-hover dataTable dtr-inline table-full-width\">\n          <div className=\"toolbar col-12\">\n            <div className=\"row\">\n              {this.props.toolbar}\n            </div>\n          </div>\n          <div className=\"fresh-datatables\">\n          <table ref={this.tableEl} className=\"table table-striped table-no-bordered table-hover\" cellSpacing=\"0\" width=\"100%\" style={{width: '100%'}}>\n            <thead>\n              <tr>\n                {this.props.children}\n              </tr>\n            </thead>\n            <tfoot>\n              <tr>\n                {this.props.children}\n              </tr>\n            </tfoot>\n          </table>\n          </div>\n        </div>\n        </div>\n      </div>\n    </div>\n  }\n}\n","export default function getCookie(cname) {\n  var name = cname + \"=\";\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var ca = decodedCookie.split(';');\n  for(var i = 0; i <ca.length; i++) {\n  var c = ca[i];\n  while (c.charAt(0) == ' ') {\n    c = c.substring(1);\n  }\n  if (c.indexOf(name) == 0) {\n    return c.substring(name.length, c.length);\n  }\n  }\n  return \"\";\n}","import Swal from 'sweetalert2';\n\nexport default function(action, config={} ) {\n\treturn Swal.fire({\n\t  title: 'Are you sure?',\n\t  text: config.consequence || \"You won't be able to revert this!\",\n\t  icon: 'warning',\n\t  showCancelButton: true,\n\t  confirmButtonColor: '#3085d6',\n\t  cancelButtonColor: '#d33',\n\t  confirmButtonText:  config.yes || 'Yes'\n\t}).then((result) => {\n\t  if (result.value) {\n\t  \tlet loadingModal = Swal.fire({\n\t      title: config.loading || 'Waiting...',\n\t      text: config.loading_text || 'waiting for operation to complete',\n\t      showConfirmButton: false,\n\t      onBeforeOpen: () => {\n\t   \t \t\tSwal.showLoading()\n\t   \t \t}\n\t    });\n\n\t    action().then(res=>{\n\t  \t\tloadingModal.closeModal();\n\t  \t\tSwal.fire(\n\t\t      res.success,\n\t\t      res.succes_text,\n\t\t      'success'\n\t\t    );\n\t\t\t}, error => {\n\t\t\t\tloadingModal.closeModal();\n\t\t\t\tSwal.fire({\n\t\t\t\t  icon: 'error',\n\t\t\t\t  title: 'Oops...',\n\t\t\t\t  text: error.error,\n\t\t\t\t  footer: error.footer || ''\n\t\t\t\t});\n\t\t\t});\n\t  }\n\t  else if (result.dismiss === Swal.DismissReason.cancel) {\n\t    Swal.fire(\n\t      'Cancelled',\n\t      config.canceled,\n\t      'error'\n\t    )\n\t  }\n\t});\n}","import React, {Component} from 'react';\n// import 'eonasdan-bootstrap-datetimepicker'\n// import 'eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css';\nimport 'bootstrap-datepicker'\nimport 'bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css';\nimport jquery from 'jquery';\n\nexport default class DateInput extends Component {\n\tstate = {date: ''}\n\tdateInput = React.createRef()\n\thiddenInput = React.createRef()\n\tcomponentDidMount(){\n\t\tvar self = this;\n\t\tjquery(this.dateInput.current).datepicker({format: 'dd/mm/yyyy',zIndexOffset: 1040}).on('changeDate changeMonth changeYear',e=>self.handleChange(e))\n\t\tthis.dateInput.current.value = this.props.value ? this.props.value.split('-').reverse().join('/') : '';\n\t}\n\tcomponentDidUpdate(prevProp,prevState){\n\t\tif(prevProp.value !== this.props.value){\n\t\t\tlet val = this.props.value ? this.props.value.split('-').reverse().join('/') : '';\n\t\t\tthis.dateInput.current.value = val;\n\t\t\tif((new Date(this.props.value)).getDate())\n\t\t\t\tjquery(this.dateInput.current).datepicker('setDate',val);\n\t\t}\n\t}\n\thandleChange(e){\n\t\tlet val = e.target.value.split('/').reverse().join('-');\n\t\tvar nativeInputValueSetter = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, \"value\").set;\n\t\tnativeInputValueSetter.call(this.hiddenInput.current, val);\n\n\t\tvar ev2 = new Event('input', { bubbles: true});\n\t\tthis.hiddenInput.current.dispatchEvent(ev2);\n\t}\n\trender(){\n\t\tlet props = {...this.props};\n\t\tdelete props.value;\n\t\treturn <>\n\t\t\t<input onChange={this.handleChange.bind(this)} {...props} type='text' ref={this.dateInput} />\n\t\t\t<input onChange={this.props.onChange} name={this.props.name} style={{display: 'none'}} ref={this.hiddenInput} value={this.state.date} />\n\t\t</>\n\t}\n}","/*! CellEdit 1.0.19\n * ©2016 Elliott Beaty - datatables.net/license\n */\n\n/**\n * @summary     CellEdit\n * @description Make a cell editable when clicked upon\n * @version     1.0.19\n * @file        dataTables.editCell.js\n * @author      Elliott Beaty\n * @contact     elliott@elliottbeaty.com\n * @copyright   Copyright 2016 Elliott Beaty\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\njQuery.fn.dataTable.Api.register('MakeCellsEditable()', function (settings) {\n    var table = this.table();\n\n    jQuery.fn.extend({\n        // UPDATE\n        updateEditableCell: function (callingElement) {\n            // Need to redeclare table here for situations where we have more than one datatable on the page. See issue6 on github\n            var table = $(callingElement).closest(\"table\").DataTable().table();\n            var row = table.row($(callingElement).parents('tr'));\n            var cell = table.cell($(callingElement).parents('td, th'));\n            var columnIndex = cell.index().column;\n            var inputField =getInputField(callingElement);\n\n            // Update\n            var newValue = inputField.val();\n            if (!newValue && ((settings.allowNulls) && settings.allowNulls != true)) {\n                // If columns specified\n                if (settings.allowNulls.columns) {\n                    // If current column allows nulls\n                    if (settings.allowNulls.columns.indexOf(columnIndex) > -1) {\n                        _update(newValue);\n                    } else {\n                        _addValidationCss();\n                    }\n                    // No columns allow null\n                } else if (!newValue) {\n                    _addValidationCss();\n                }\n                //All columns allow null\n            } else if (newValue && settings.onValidate) {\n                if (settings.onValidate(cell, row, newValue)) {\n                    _update(newValue);\n                } else {\n                    _addValidationCss();\n                }\n            }\n            else {\n                _update(newValue);\n            }\n            function _addValidationCss() {\n                // Show validation error\n                if (settings.allowNulls.errorClass) {\n                    $(inputField).addClass(settings.allowNulls.errorClass);\n                } else {\n                    $(inputField).css({ \"border\": \"red solid 1px\" });\n                }\n            }\n            function _update(newValue) {\n                var oldValue = cell.data();\n                cell.data(newValue);\n                //Return cell & row.\n                settings.onUpdate(cell, row, oldValue);\n            }\n            // Get current page\n            var currentPageIndex = table.page.info().page;\n\n            //Redraw table\n            // table.page(currentPageIndex).draw(false);\n        },\n        // CANCEL\n        cancelEditableCell: function (callingElement) {\n            var table = $(callingElement.closest(\"table\")).DataTable().table();\n            var cell = table.cell($(callingElement).parents('td, th'));\n            // Set cell to it's original value\n            cell.data(cell.data());\n\n            // Redraw table\n            table.draw();\n        }\n\n\n    });\n\n    // Destroy\n    if (settings === \"destroy\") {\n        $(table.body()).off(\"click\", \"td\");\n        table = null;\n    }\n\n    if (table != null) {\n        // On cell click\n        $(table.body()).on('click', 'td', function () {\n\n            var currentColumnIndex = table.cell(this).index().column;\n\n            // DETERMINE WHAT COLUMNS CAN BE EDITED\n            if ((settings.columns && settings.columns.indexOf(currentColumnIndex) > -1) || (!settings.columns)) {\n                var row = table.row($(this).parents('tr'));\n                editableCellsRow = row;\n\n                var cell = table.cell(this).node();\n                var oldValue = table.cell(this).data();\n                // Sanitize value\n                oldValue = sanitizeCellValue(oldValue);\n\n                // Show input\n                if (!$(cell).find('input').length && !$(cell).find('select').length && !$(cell).find('textarea').length) {\n                    // Input CSS\n                    var input = getInputHtml(currentColumnIndex, settings, oldValue);\n                    $(cell).html(input.html);\n                    if (input.focus) {\n                        $('#ejbeatycelledit').focus();\n                    }\n                }\n            }\n        });\n    }\n\n});\n\nfunction getInputHtml(currentColumnIndex, settings, oldValue) {\n    var inputSetting, inputType, input, inputCss, confirmCss, cancelCss, startWrapperHtml = '', endWrapperHtml = '', listenToKeys = false;\n\n    input = {\"focus\":true,\"html\":null};\n\n    if(settings.inputTypes){\n\t\t$.each(settings.inputTypes, function (index, setting) {\n\t\t\tif (setting.column == currentColumnIndex) {\n\t\t\t\tinputSetting = setting;\n\t\t\t\tinputType = inputSetting.type.toLowerCase();\n\t\t\t}\n\t\t});\n\t}\n\n    if (settings.inputCss) { inputCss = settings.inputCss; }\n    if (settings.wrapperHtml) {\n        var elements = settings.wrapperHtml.split('{content}');\n        if (elements.length === 2) {\n            startWrapperHtml = elements[0];\n            endWrapperHtml = elements[1];\n        }\n    }\n    \n    if (settings.confirmationButton) {\n        if (settings.confirmationButton.listenToKeys) { listenToKeys = settings.confirmationButton.listenToKeys; }\n        confirmCss = settings.confirmationButton.confirmCss;\n        cancelCss = settings.confirmationButton.cancelCss;\n        inputType = inputType + \"-confirm\";\n    }\n    switch (inputType) {\n        case \"list\":\n            input.html = startWrapperHtml + \"<select class='\" + inputCss + \"' onchange='$(this).updateEditableCell(this);'>\";\n            $.each(inputSetting.options, function (index, option) {\n                if (oldValue == option.value) {\n                   input.html = input.html + \"<option value='\" + option.value + \"' selected>\" + option.display + \"</option>\"\n                } else {\n                   input.html = input.html + \"<option value='\" + option.value + \"' >\" + option.display + \"</option>\"\n                }\n            });\n            input.html = input.html + \"</select>\" + endWrapperHtml;\n            input.focus = false;\n            break;\n        case \"list-confirm\": // List w/ confirm\n            input.html = startWrapperHtml + \"<select class='\" + inputCss + \"'>\";\n            $.each(inputSetting.options, function (index, option) {\n                if (oldValue == option.value) {\n                   input.html = input.html + \"<option value='\" + option.value + \"' selected>\" + option.display + \"</option>\"\n                } else {\n                   input.html = input.html + \"<option value='\" + option.value + \"' >\" + option.display + \"</option>\"\n                }\n            });\n            input.html = input.html + \"</select>&nbsp;<a href='javascript:void(0);' class='\" + confirmCss + \"' onclick='$(this).updateEditableCell(this);'>Confirm</a> <a href='javascript:void(0);' class='\" + cancelCss + \"' onclick='$(this).cancelEditableCell(this)'>Cancel</a>\" + endWrapperHtml;\n            input.focus = false;\n            break;\n        case \"datepicker\": //Both datepicker options work best when confirming the values\n        case \"datepicker-confirm\":\n            // Makesure jQuery UI is loaded on the page\n            if (typeof jQuery.ui == 'undefined') {\n                alert(\"jQuery UI is required for the DatePicker control but it is not loaded on the page!\");\n                break;\n            }\n\t        jQuery(\".datepick\").datepicker(\"destroy\");\n\t        input.html = startWrapperHtml + \"<input id='ejbeatycelledit' type='text' name='date' class='datepick \" + inputCss + \"'   value='\" + oldValue + \"'></input> &nbsp;<a href='javascript:void(0);' class='\" + confirmCss + \"' onclick='$(this).updateEditableCell(this)'>Confirm</a> <a href='javascript:void(0);' class='\" + cancelCss + \"' onclick='$(this).cancelEditableCell(this)'>Cancel</a>\" + endWrapperHtml;\n\t        setTimeout(function () { //Set timeout to allow the script to write the input.html before triggering the datepicker\n\t            var icon = \"http://jqueryui.com/resources/demos/datepicker/images/calendar.gif\";\n                // Allow the user to provide icon\n\t            if (typeof inputSetting.options !== 'undefined' && typeof inputSetting.options.icon !== 'undefined') {\n\t                icon = inputSetting.options.icon;\n\t            }\n\t            var self = jQuery('.datepick').datepicker(\n                    {\n                        showOn: \"button\",\n                        buttonImage: icon,\n                        buttonImageOnly: true,\n                        buttonText: \"Select date\"\n                    });\n\t        },100);\n\t        break;\n        case \"text-confirm\": // text input w/ confirm\n            input.html = startWrapperHtml + \"<input id='ejbeatycelledit' class='\" + inputCss + \"' value='\"+oldValue+\"'\" + (listenToKeys ? \" onkeyup='if(event.keyCode==13) {$(this).updateEditableCell(this);} else if (event.keyCode===27) {$(this).cancelEditableCell(this);}'\" : \"\") + \"></input>&nbsp;<a href='javascript:void(0);' class='\" + confirmCss + \"' onclick='$(this).updateEditableCell(this)'>Confirm</a> <a href='javascript:void(0);' class='\" + cancelCss + \"' onclick='$(this).cancelEditableCell(this)'>Cancel</a>\" + endWrapperHtml;\n            break;\n        case \"undefined-confirm\": // text input w/ confirm\n            input.html = startWrapperHtml + \"<input id='ejbeatycelledit' class='\" + inputCss + \"' value='\" + oldValue + \"'\" + (listenToKeys ? \" onkeyup='if(event.keyCode==13) {$(this).updateEditableCell(this);} else if (event.keyCode===27) {$(this).cancelEditableCell(this);}'\" : \"\") + \"></input>&nbsp;<a href='javascript:void(0);' class='\" + confirmCss + \"' onclick='$(this).updateEditableCell(this)'>Confirm</a> <a href='javascript:void(0);' class='\" + cancelCss + \"' onclick='$(this).cancelEditableCell(this)'>Cancel</a>\" + endWrapperHtml;\n            break;\n        case \"textarea\":\n        case \"textarea-confirm\":\n            input.html = startWrapperHtml + \"<textarea id='ejbeatycelledit' class='\" + inputCss + \"'>\"+oldValue+\"</textarea><a href='javascript:void(0);' class='\" + confirmCss + \"' onclick='$(this).updateEditableCell(this)'>Confirm</a> <a href='javascript:void(0);' class='\" + cancelCss + \"' onclick='$(this).cancelEditableCell(this)'>Cancel</a>\" + endWrapperHtml;\n            break;\n\tcase \"number-confirm\" :\n\t    input.html = startWrapperHtml + \"<input id='ejbeatycelledit' type='number' class='\" + inputCss + \"' value='\"+oldValue+\"'\" + (listenToKeys ? \" onkeyup='if(event.keyCode==13) {$(this).updateEditableCell(this);} else if (event.keyCode===27) {$(this).cancelEditableCell(this);}'\" : \"\") + \"></input>&nbsp;<a href='javascript:void(0);' class='\" + confirmCss + \"' onclick='$(this).updateEditableCell(this)'>Confirm</a> <a href='javascript:void(0);' class='\" + cancelCss + \"' onclick='$(this).cancelEditableCell(this)'>Cancel</a>\" + endWrapperHtml;\n\t    break;\n        default: // text input\n            input.html = startWrapperHtml + \"<input id='ejbeatycelledit' class='\" + inputCss + \"' onfocusout='$(this).updateEditableCell(this)' value='\" + oldValue + \"' onkeyup='if(event.keyCode==13) {event.target.blur()}' ></input>\" + endWrapperHtml;\n            break;\n    }\n    return input;\n}\n\nfunction getInputField(callingElement) {\n    // Update datatables cell value\n    var inputField;\n    switch ($(callingElement).prop('nodeName').toLowerCase()) {\n        case 'a': // This means they're using confirmation buttons\n            if ($(callingElement).siblings('input').length > 0) {\n                inputField = $(callingElement).siblings('input');\n            }\n            if ($(callingElement).siblings('select').length > 0) {\n                inputField = $(callingElement).siblings('select');\n            }\n            if ($(callingElement).siblings('textarea').length > 0) {\n                inputField = $(callingElement).siblings('textarea');\n            }\n        break;\n        default:\n            inputField = $(callingElement);\n    }\n    return inputField;\n}\n\nfunction sanitizeCellValue(cellValue) {\n    if (typeof (cellValue) === 'undefined' || cellValue === null || cellValue.length < 1) {\n        return \"\";\n    }\n\n    // If not a number\n    if (isNaN(cellValue)) {\n        // escape single quote\n        cellValue = cellValue.replace(/'/g, \"&#39;\");\n    }\n    return cellValue;\n}\n","import React, {Component} from 'react';\nimport lodash from 'lodash';\nimport $ from 'jquery';\nimport './jquery.tabledit';\n\nexport default class Tabledit extends Component {\n\ttable = React.createRef();\n\tdata = []\n\tcomponentDidMount(){\n\t\tthis.data = this.props.data || [];\n\t\tthis.initTableEdit();\n\t}\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif(!lodash.isEqual(this.props.data, prevProps.data)) {\n\t\t\tthis.data = this.props.data;\n\t\t\tthis.initTableEdit();\n\t\t}\n\t}\n\n\tinitTableEdit() {\n\t  let self = this;\n\t  $(this.table.current).Tabledit({\n\t      editButton: false,\n\t      deleteButton: false,\n\t      onAjax: function(action, serialize) {\n\t      \t\tlet row = parseInt(serialize[0].value) -1\n\t          let item = serialize[1];\n\t          self.setValue(row, item);\n\t          return false;\n\t      },\n\t      columns: this.props.columns || {identifier: [-1],editable: []}\n\t  });\n\t}\n\tsetValue(row, item){\n\t\tlet data = this.data;\n\t\tif(!data[row]){\n\t\t\tdata[row] = {};\n\t\t}\n\n\t\tdata[row][item.name] = item.value;\n\t\tif(this.props.update){\n\t\t\tthis.props.update(data);\n\t\t}\n\t}\n\trender() {\n\t\treturn <table ref={this.table} className={this.props.className} >\n\t\t\t{this.props.children}\n\t\t</table>\n\t}\n}","/*!\n * Tabledit v1.2.3 (https://github.com/markcell/jQuery-Tabledit)\n * Copyright (c) 2015 Celso Marques\n * Licensed under MIT (https://github.com/markcell/jQuery-Tabledit/blob/master/LICENSE)\n */\n\n/**\n * @description Inline editor for HTML tables compatible with Bootstrap\n * @version 1.2.3\n * @author Celso Marques\n */\n\n\nif (typeof jQuery === 'undefined') {\n\n  throw new Error('Tabledit requires jQuery library.');\n}\n\n(function($) {\n    'use strict';\n\n    $.fn.Tabledit = function(options) {\n        if (!this.is('table')) {\n\n            throw new Error('Tabledit only works when applied to a table.');\n        }\n\n        var $table = this;\n\n        var defaults = {\n            url: window.location.href,\n            inputClass: 'form-control input-sm',\n            toolbarClass: 'btn-toolbar',\n            groupClass: 'btn-group btn-group-sm',\n            dangerClass: 'danger',\n            warningClass: 'warning',\n            mutedClass: 'text-muted',\n            eventType: 'click',\n            rowIdentifier: 'id',\n            hideIdentifier: false,\n            autoFocus: true,\n            editButton: true,\n            deleteButton: true,\n            saveButton: true,\n            restoreButton: true,\n            buttons: {\n                edit: {\n                    class: 'btn btn-primary waves-effect waves-light',\n                    html: '<span class=\"icofont icofont-ui-edit\"></span>',\n                    action: 'edit'\n                },\n                delete: {\n                    class: 'btn btn-danger waves-effect waves-light',\n                    html: '<span class=\"icofont icofont-ui-delete\"></span>',\n                    action: 'delete'\n                },\n                save: {\n                    class: 'btn btn-sm btn-success',\n                    html: 'Save'\n                },\n                restore: {\n                    class: 'btn btn-sm btn-warning',\n                    html: 'Restore',\n                    action: 'restore'\n                },\n                confirm: {\n                    class: 'btn btn-sm btn-danger',\n                    html: 'Confirm'\n                }\n            },\n            onDraw: function() { return; },\n            onSuccess: function() { return; },\n            onFail: function() { return; },\n            onAlways: function() { return; },\n            onAjax: function() { return; }\n        };\n\n        var settings = $.extend(true, defaults, options);\n\n        var $lastEditedRow = 'undefined';\n        var $lastDeletedRow = 'undefined';\n        var $lastRestoredRow = 'undefined';\n\n        /**\n         * Draw Tabledit structure (identifier column, editable columns, toolbar column).\n         *\n         * @type {object}\n         */\n        var Draw = {\n            columns: {\n                identifier: function() {\n\n                    // Hide identifier column.\n                    if (settings.hideIdentifier) {\n                        $table.find('th:nth-child(' + parseInt(settings.columns.identifier[0]) + 1 + '), tbody td:nth-child(' + parseInt(settings.columns.identifier[0]) + 1 + ')').hide();\n                    }\n\n                    var $td = $table.find('tbody td:nth-child(' + (parseInt(settings.columns.identifier[0]) + 1) + ')');\n\n                    $td.each(function() {\n                        // Create hidden input with row identifier.\n                        var span = '<span class=\"tabledit-span tabledit-identifier\">' + $(this).text() + '</span>';\n                        var input = '<input class=\"tabledit-input tabledit-identifier\" type=\"hidden\" name=\"' + settings.columns.identifier[1] + '\" value=\"' + $(this).text() + '\" disabled>';\n\n                        // Add elements to table cell.\n                        $(this).html(span + input);\n\n                        // Add attribute \"id\" to table row.\n                        $(this).parent('tr').attr(settings.rowIdentifier, $(this).text());\n                    });\n                },\n                editable: function() {\n                    // \n                    for (var i = 0; i < settings.columns.editable.length; i++) {\n                        var $td = $table.find('tbody td:nth-child(' + (parseInt(settings.columns.editable[i][0]) + 1) + ')');\n\n                        $td.each(function() {\n                            // Get text of this cell.\n                            var text = $(this).text();\n\n                            // Add pointer as cursor.\n                            if (!settings.editButton) {\n                                $(this).css('cursor', 'pointer');\n                            }\n\n                            // Create span element.\n                            var span = '<span class=\"tabledit-span\">' + text + '</span>';\n\n                            // Check if exists the third parameter of editable array.\n                            if (typeof settings.columns.editable[i][2] !== 'undefined') {\n                                // Create select element.\n                                var input = '<select class=\"tabledit-input ' + settings.inputClass + '\" name=\"' + settings.columns.editable[i][1] + '\" style=\"display: none;\" disabled>';\n\n                                // Create options for select element.\n                                $.each(jQuery.parseJSON(settings.columns.editable[i][2]), function(index, value) {\n                                    if (text === value) {\n                                        input += '<option value=\"' + index + '\" selected>' + value + '</option>';\n                                    } else {\n                                        input += '<option value=\"' + index + '\">' + value + '</option>';\n                                    }\n                                });\n\n                                // Create last piece of select element.\n                                input += '</select>';\n                            } else {\n                                // Create text input element.\n                                var input = '<input class=\"tabledit-input ' + settings.inputClass + '\" type=\"text\" name=\"' + settings.columns.editable[i][1] + '\" value=\"' + $(this).text() + '\" style=\"display: none;\" disabled>';\n                            }\n\n                            // Add elements and class \"view\" to table cell.\n                            $(this).html(span + input);\n                            $(this).addClass('tabledit-view-mode');\n                       });\n                    }\n                },\n                toolbar: function() {\n\n                    if (settings.editButton || settings.deleteButton) {\n\n                        var editButton = '';\n                        var deleteButton = '';\n                        var saveButton = '';\n                        var restoreButton = '';\n                        var confirmButton = '';\n\n                        // Add toolbar column header if not exists.\n                        if ($table.find('th.tabledit-toolbar-column').length === 0) {\n                            $table.find('tr:first').append('<th class=\"tabledit-toolbar-column\"></th>');\n                        }\n\n                        // Create edit button.\n                        if (settings.editButton) {\n\n                            editButton = '<button type=\"button\" class=\"tabledit-edit-button ' + settings.buttons.edit.class + '\" style=\"float: none;margin: 5px;\">' + settings.buttons.edit.html + '</button>';\n                        }\n\n                        // Create delete button.\n                        if (settings.deleteButton) {\n                            deleteButton = '<button type=\"button\" class=\"tabledit-delete-button ' + settings.buttons.delete.class + '\" style=\"float: none;margin: 5px;\">' + settings.buttons.delete.html + '</button>';\n                            confirmButton = '<button type=\"button\" class=\"tabledit-confirm-button ' + settings.buttons.confirm.class + '\" style=\"display: none; float: none;\">' + settings.buttons.confirm.html + '</button>';\n                        }\n\n                        // Create save button.\n                        if (settings.editButton && settings.saveButton) {\n                            saveButton = '<button type=\"button\" class=\"tabledit-save-button ' + settings.buttons.save.class + '\" style=\"display: none; float: none;\">' + settings.buttons.save.html + '</button>';\n                        }\n\n                        // Create restore button.\n                        if (settings.deleteButton && settings.restoreButton) {\n                            restoreButton = '<button type=\"button\" class=\"tabledit-restore-button ' + settings.buttons.restore.class + '\" style=\"display: none; float: none;\">' + settings.buttons.restore.html + '</button>';\n                        }\n\n                        var toolbar = '<div class=\"tabledit-toolbar ' + settings.toolbarClass + '\" style=\"text-align: left;\">\\n\\\n                                           <div class=\"' + settings.groupClass + '\" style=\"float: none;\">' + editButton + deleteButton + '</div>\\n\\\n                                           ' + saveButton + '\\n\\\n                                           ' + confirmButton + '\\n\\\n                                           ' + restoreButton + '\\n\\\n                                       </div></div>';\n\n                        // Add toolbar column cells.\n                        $table.find('tr:gt(0)').append('<td style=\"white-space: nowrap; width: 1%;\">' + toolbar + '</td>');\n                    }\n                }\n            }\n        };\n\n        /**\n         * Change to view mode or edit mode with table td element as parameter.\n         *\n         * @type object\n         */\n        var Mode = {\n            view: function(td) {\n\n                // Get table row.\n                var $tr = $(td).parent('tr');\n                // Disable identifier.\n                $(td).parent('tr').find('.tabledit-input.tabledit-identifier').prop('disabled', true);\n                // Hide and disable input element.\n                $(td).find('.tabledit-input').blur().hide().prop('disabled', true);\n                // Show span element.\n                $(td).find('.tabledit-span').show();\n                // Add \"view\" class and remove \"edit\" class in td element.\n                $(td).addClass('tabledit-view-mode').removeClass('tabledit-edit-mode');\n                // Update toolbar buttons.\n                if (settings.editButton) {\n                    $tr.find('button.tabledit-save-button').hide();\n                    $tr.find('button.tabledit-edit-button').removeClass('active').blur();\n                }\n            },\n            edit: function(td) {\n                // \n                Delete.reset(td);\n                // Get table row.\n                var $tr = $(td).parent('tr');\n                // Enable identifier.\n                $tr.find('.tabledit-input.tabledit-identifier').prop('disabled', false);\n                // Hide span element.\n                $(td).find('.tabledit-span').hide();\n                // Get input element.\n                var $input = $(td).find('.tabledit-input');\n                // Enable and show input element.\n                $input.prop('disabled', false).show();\n                // Focus on input element.\n                if (settings.autoFocus) {\n                    $input.focus();\n                }\n                // Add \"edit\" class and remove \"view\" class in td element.\n                $(td).addClass('tabledit-edit-mode').removeClass('tabledit-view-mode');\n                // Update toolbar buttons.\n                if (settings.editButton) {\n                    $tr.find('button.tabledit-edit-button').addClass('active');\n                    $tr.find('button.tabledit-save-button').show();\n                }\n            }\n        };\n\n        /**\n         * Available actions for edit function, with table td element as parameter or set of td elements.\n         *\n         * @type object\n         */\n        var Edit = {\n            reset: function(td) {\n\n                $(td).each(function() {\n                    // Get input element.\n                    var $input = $(this).find('.tabledit-input');\n                    // Get span text.\n                    var text = $(this).find('.tabledit-span').text();\n                    // Set input/select value with span text.\n                    if ($input.is('select')) {\n                        $input.find('option').filter(function() {\n                            return $.trim($(this).text()) === text;\n                        }).attr('selected', true);\n                    } else {\n                        $input.val(text);\n                    }\n                    // Change to view mode.\n                    Mode.view(this);\n                });\n            },\n            submit: function(td) {\n\n                // Send AJAX request to server.\n                var ajaxResult = ajax(settings.buttons.edit.action);\n\n                // if (ajaxResult === false) {\n                //     return;\n                // }\n\n                $(td).each(function() {\n                    // Get input element.\n                    var $input = $(this).find('.tabledit-input');\n                    // Set span text with input/select new value.\n                    if ($input.is('select')) {\n                        $(this).find('.tabledit-span').text($input.find('option:selected').text());\n                    } else {\n                        $(this).find('.tabledit-span').text($input.val());\n                    }\n                    // Change to view mode.\n                    Mode.view(this);\n                });\n\n                // Set last edited column and row.\n                $lastEditedRow = $(td).parent('tr');\n            }\n        };\n\n        /**\n         * Available actions for delete function, with button as parameter.\n         *\n         * @type object\n         */\n        var Delete = {\n            reset: function(td) {\n\n                // Reset delete button to initial status.\n                $table.find('.tabledit-confirm-button').hide();\n                // Remove \"active\" class in delete button.\n                $table.find('.tabledit-delete-button').removeClass('active').blur();\n            },\n            submit: function(td) {\n                // \n                Delete.reset(td);\n                // Enable identifier hidden input.\n                $(td).parent('tr').find('input.tabledit-identifier').attr('disabled', false);\n                // Send AJAX request to server.\n                var ajaxResult = ajax(settings.buttons.delete.action);\n                // Disable identifier hidden input.\n                $(td).parents('tr').find('input.tabledit-identifier').attr('disabled', true);\n\n                if (ajaxResult === false) {\n                    return;\n                }\n\n                // Add class \"deleted\" to row.\n                $(td).parent('tr').addClass('tabledit-deleted-row');\n                // Hide table row.\n                $(td).parent('tr').addClass(settings.mutedClass).find('.tabledit-toolbar button:not(.tabledit-restore-button)').attr('disabled', true);\n                // Show restore button.\n                $(td).find('.tabledit-restore-button').show();\n                // Set last deleted row.\n                $lastDeletedRow = $(td).parent('tr');\n                var abcd=$(td).parent().parent().children().index($(td).parent('tr'));\n                var a=abcd+1;\n                 document.getElementById(\"example-2\").deleteRow(a);\n            },\n            confirm: function(td) {\n                // \n                // Reset all cells in edit mode.\n                $table.find('td.tabledit-edit-mode').each(function() {\n                    Edit.reset(this);\n                });\n                // Add \"active\" class in delete button.\n                $(td).find('.tabledit-delete-button').addClass('active');\n                // Show confirm button.\n                $(td).find('.tabledit-confirm-button').show();\n            },\n            restore: function(td) {\n                // Enable identifier hidden input.\n                $(td).parent('tr').find('input.tabledit-identifier').attr('disabled', false);\n                // Send AJAX request to server.\n                var ajaxResult = ajax(settings.buttons.restore.action);\n                // Disable identifier hidden input.\n                $(td).parents('tr').find('input.tabledit-identifier').attr('disabled', true);\n\n                if (ajaxResult === false) {\n                    return;\n                }\n\n                // Remove class \"deleted\" to row.\n                $(td).parent('tr').removeClass('tabledit-deleted-row');\n                // Hide table row.\n                $(td).parent('tr').removeClass(settings.mutedClass).find('.tabledit-toolbar button').attr('disabled', false);\n                // Hide restore button.\n                $(td).find('.tabledit-restore-button').hide();\n                // Set last restored row.\n                $lastRestoredRow = $(td).parent('tr');\n            }\n        };\n\n        /**\n         * Send AJAX request to server.\n         *\n         * @param {string} action\n         */\n        function ajax(action)\n        {\n            var serialize = $table.find('.tabledit-input').serialize() + '&action=' + action;\n\n            var result = settings.onAjax(action, $table.find('.tabledit-input').serializeArray());\n\n            if (result === false) {\n                return false;\n            }\n\n            var jqXHR = $.post(settings.url, serialize, function(data, textStatus, jqXHR) {\n                if (action === settings.buttons.edit.action) {\n                    $lastEditedRow.removeClass(settings.dangerClass).addClass(settings.warningClass);\n                    setTimeout(function() {\n                        //$lastEditedRow.removeClass(settings.warningClass);\n                        $table.find('tr.' + settings.warningClass).removeClass(settings.warningClass);\n                    }, 1400);\n                }\n\n                settings.onSuccess(data, textStatus, jqXHR);\n            }, 'json');\n\n            jqXHR.fail(function(jqXHR, textStatus, errorThrown) {\n                if (action === settings.buttons.delete.action) {\n                    $lastDeletedRow.removeClass(settings.mutedClass).addClass(settings.dangerClass);\n                    $lastDeletedRow.find('.tabledit-toolbar button').attr('disabled', false);\n                    $lastDeletedRow.find('.tabledit-toolbar .tabledit-restore-button').hide();\n                } else if (action === settings.buttons.edit.action) {\n                    $lastEditedRow.addClass(settings.dangerClass);\n                }\n\n                settings.onFail(jqXHR, textStatus, errorThrown);\n            });\n\n            jqXHR.always(function() {\n                settings.onAlways();\n            });\n\n            return jqXHR;\n        }\n\n        Draw.columns.identifier();\n        Draw.columns.editable();\n        Draw.columns.toolbar();\n\n        settings.onDraw();\n\n        if (settings.deleteButton) {\n            /**\n             * Delete one row.\n             *\n             * @param {object} event\n             */\n            $table.on('click', 'button.tabledit-delete-button', function(event) {\n                if (event.handled !== true) {\n                    event.preventDefault();\n\n                    // Get current state before reset to view mode.\n                    var activated = $(this).hasClass('active');\n\n                    var $td = $(this).parents('td');\n\n                    Delete.reset($td);\n\n                    if (!activated) {\n                        Delete.confirm($td);\n                    }\n\n                    event.handled = true;\n                }\n            });\n\n            /**\n             * Delete one row (confirm).\n             *\n             * @param {object} event\n             */\n            $table.on('click', 'button.tabledit-confirm-button', function(event) {\n                //// \n                if (event.handled !== true) {\n                       \n\n                    event.preventDefault();\n\n                    var $td = $(this).parents('td');\n\n                    Delete.submit($td);\n\n                    event.handled = true;\n                }\n            });\n        }\n\n        if (settings.restoreButton) {\n            /**\n             * Restore one row.\n             *\n             * @param {object} event\n             */\n            $table.on('click', 'button.tabledit-restore-button', function(event) {\n                if (event.handled !== true) {\n                    event.preventDefault();\n\n                    Delete.restore($(this).parents('td'));\n\n                    event.handled = true;\n                }\n            });\n        }\n\n        if (settings.editButton) {\n            /**\n             * Activate edit mode on all columns.\n             *\n             * @param {object} event\n             */\n            $table.on('click', 'button.tabledit-edit-button', function(event) {\n                if (event.handled !== true) {\n                    event.preventDefault();\n\n                    var $button = $(this);\n\n                    // Get current state before reset to view mode.\n                    var activated = $button.hasClass('active');\n\n                    // Change to view mode columns that are in edit mode.\n                    Edit.reset($table.find('td.tabledit-edit-mode'));\n\n                    if (!activated) {\n                        // Change to edit mode for all columns in reverse way.\n                        $($button.parents('tr').find('td.tabledit-view-mode').get().reverse()).each(function() {\n                            Mode.edit(this);\n                        });\n                    }\n\n                    event.handled = true;\n                }\n            });\n\n            /**\n             * Save edited row.\n             *\n             * @param {object} event\n             */\n            $table.on('click', 'button.tabledit-save-button', function(event) {\n                if (event.handled !== true) {\n                    event.preventDefault();\n\n                    // Submit and update all columns.\n                    Edit.submit($(this).parents('tr').find('td.tabledit-edit-mode'));\n\n                    event.handled = true;\n                }\n            });\n        } else {\n            /**\n             * Change to edit mode on table td element.\n             *\n             * @param {object} event\n             */\n            $table.on(settings.eventType, 'tr:not(.tabledit-deleted-row) td.tabledit-view-mode', function(event) {\n                if (event.handled !== true) {\n                    event.preventDefault();\n\n                    // Reset all td's in edit mode.\n                    Edit.reset($table.find('td.tabledit-edit-mode'));\n\n                    // Change to edit mode.\n                    Mode.edit(this);\n\n                    event.handled = true;\n                }\n            });\n\n            /**\n             * Change event when input is a select element.\n             */\n            $table.on('change', 'select.tabledit-input:visible', function() {\n                if (event.handled !== true) {\n                    // Submit and update the column.\n                    Edit.submit($(this).parent('td'));\n\n                    event.handled = true;\n                }\n            });\n\n            /**\n             * Click event on document element.\n             *\n             * @param {object} event\n             */\n            $(document).on('click', function(event) {\n                var $editMode = $table.find('.tabledit-edit-mode');\n                // Reset visible edit mode column.\n                if (!$editMode.is(event.target) && $editMode.has(event.target).length === 0) {\n                    Edit.reset($table.find('.tabledit-input:visible').parent('td'));\n                }\n            });\n        }\n\n        /**\n         * Keyup event on document element.\n         *\n         * @param {object} event\n         */\n        $(document).on('keyup', function(event) {\n            // Get input element with focus or confirmation button.\n            var $input = $table.find('.tabledit-input:visible');\n            var $button = $table.find('.tabledit-confirm-button');\n\n            if ($input.length > 0) {\n                var $td = $input.parents('td');\n            } else if ($button.length > 0) {\n                var $td = $button.parents('td');\n            } else {\n                return;\n            }\n\n            // Key?\n            switch (event.keyCode) {\n                case 9:  // Tab.\n                    if (!settings.editButton) {\n                        Edit.submit($td);\n                        Mode.edit($td.closest('td').next());\n                    }\n                    break;\n                case 13: // Enter.\n                    Edit.submit($td);\n                    break;\n                case 27: // Escape.\n                    Edit.reset($td);\n                    Delete.reset($td);\n                    break;\n            }\n        });\n\n        return this;\n    };\n}(jQuery));\n"],"sourceRoot":""}